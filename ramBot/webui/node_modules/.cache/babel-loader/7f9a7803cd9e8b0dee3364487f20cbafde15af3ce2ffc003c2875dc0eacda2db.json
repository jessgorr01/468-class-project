{"ast":null,"code":"var _jsxFileName = \"/Users/zhayriawashington/Documents/GitHub/RamBot/ramBot/Untitled/ramBot/webui/src/components/Chat.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { ChatsContainer, ChatsHeader, ChatsHeight } from \"./Chat.css\";\nimport Message from \"../Message\";\nimport ChatInput from \"../ChatInput\";\nimport { db } from \"../../firebase\";\nimport { selectRoomId } from \"../../features/roomSlice\";\nimport { useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chats = () => {\n  _s();\n  const roomId = useSelector(selectRoomId);\n  const [message, setMessage] = useState([]);\n  const chatRef = useRef(null);\n  useEffect(() => {\n    var _chatRef$current;\n    chatRef === null || chatRef === void 0 ? void 0 : (_chatRef$current = chatRef.current) === null || _chatRef$current === void 0 ? void 0 : _chatRef$current.scrollIntoView({\n      behavior: \"smooth\"\n    });\n  }, [roomId.roomId, message]);\n  useEffect(() => {\n    if (roomId.roomId) {\n      db.collection(\"rooms\").doc(roomId.roomId).collection(\"messages\").orderBy(\"timestamp\", \"asc\").onSnapshot(snapshot => setMessage(snapshot.docs.map(doc => ({\n        id: doc.id,\n        data: doc.data()\n      }))));\n    }\n  }, [roomId.roomId]);\n  return /*#__PURE__*/_jsxDEV(ChatsContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ChatsHeader, {\n      children: /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"# \", roomId && (roomId === null || roomId === void 0 ? void 0 : roomId.channelName)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatsHeight, {\n      style: {\n        height: \"50px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), message === null || message === void 0 ? void 0 : message.map((item, i) => {\n      var _item$data, _item$data$timestamp;\n      return /*#__PURE__*/_jsxDEV(Message, {\n        profilePic: item.data.profilePic,\n        username: item.data.username,\n        message: item.data.message,\n        timestamp: item === null || item === void 0 ? void 0 : (_item$data = item.data) === null || _item$data === void 0 ? void 0 : (_item$data$timestamp = _item$data.timestamp) === null || _item$data$timestamp === void 0 ? void 0 : _item$data$timestamp.seconds\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(ChatsHeight, {\n      ref: chatRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n      chatRef: chatRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(Chats, \"RRS3xzrg0oG+3UvBwK+qcw46+jQ=\", false, function () {\n  return [useSelector];\n});\n_c = Chats;\nexport default Chats;\nvar _c;\n$RefreshReg$(_c, \"Chats\");","map":{"version":3,"names":["React","useEffect","useState","useRef","ChatsContainer","ChatsHeader","ChatsHeight","Message","ChatInput","db","selectRoomId","useSelector","jsxDEV","_jsxDEV","Chats","_s","roomId","message","setMessage","chatRef","_chatRef$current","current","scrollIntoView","behavior","collection","doc","orderBy","onSnapshot","snapshot","docs","map","id","data","children","channelName","fileName","_jsxFileName","lineNumber","columnNumber","style","height","item","i","_item$data","_item$data$timestamp","profilePic","username","timestamp","seconds","ref","_c","$RefreshReg$"],"sources":["/Users/zhayriawashington/Documents/GitHub/RamBot/ramBot/Untitled/ramBot/webui/src/components/Chat.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\nimport { ChatsContainer, ChatsHeader, ChatsHeight } from \"./Chat.css\";\nimport Message from \"../Message\";\nimport ChatInput from \"../ChatInput\";\nimport { db } from \"../../firebase\";\nimport { selectRoomId } from \"../../features/roomSlice\";\nimport { useSelector } from \"react-redux\";\n\nconst Chats = () => {\n  const roomId = useSelector(selectRoomId);\n  const [message, setMessage] = useState([]);\n  const chatRef = useRef(null);\n\n  useEffect(() => {\n    chatRef?.current?.scrollIntoView({\n      behavior: \"smooth\",\n    });\n  }, [roomId.roomId, message]);\n\n  useEffect(() => {\n    if (roomId.roomId) {\n      db.collection(\"rooms\")\n        .doc(roomId.roomId)\n        .collection(\"messages\")\n        .orderBy(\"timestamp\", \"asc\")\n        .onSnapshot((snapshot) =>\n          setMessage(\n            snapshot.docs.map((doc) => ({\n              id: doc.id,\n              data: doc.data(),\n            }))\n          )\n        );\n    }\n  }, [roomId.roomId]);\n\n  return (\n    <ChatsContainer>\n      <ChatsHeader>\n        <h4># {roomId && roomId?.channelName}</h4>\n      </ChatsHeader>\n      <ChatsHeight style={{ height: \"50px\" }} />\n\n      {message?.map((item, i) => (\n        <Message\n          key={i}\n          profilePic={item.data.profilePic}\n          username={item.data.username}\n          message={item.data.message}\n          timestamp={item?.data?.timestamp?.seconds}\n        />\n      ))}\n\n      <ChatsHeight ref={chatRef} />\n      <ChatInput chatRef={chatRef} />\n    </ChatsContainer>\n  );\n};\n\nexport default Chats;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}